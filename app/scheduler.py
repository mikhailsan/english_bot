import datetime
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from app.database import SessionLocal
from app.models import UserProgress
from app.handlers.words import send_words
from aiogram import Bot, types

def setup(bot: Bot):
    scheduler = AsyncIOScheduler()

    @scheduler.scheduled_job("cron", hour=10, minute=0)  # ‚è∞ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00
    async def job():
        async with SessionLocal() as db:
            today = datetime.date.today()
            users = await db.execute(
                db.select(UserProgress)
            )
            users = users.scalars().all()

            for user in users:
                if user.last_sent != today:
                    try:
                        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
                            [types.InlineKeyboardButton(text="üìö –ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞", callback_data="more")]
                        ])
                        await bot.send_message(
                            user.user_id,
                            "üëã –ü—Ä–∏–≤–µ—Ç! –ù–µ –∑–∞–±—É–¥—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
                            reply_markup=keyboard
                        )
                    except Exception as e:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")

    scheduler.start()

